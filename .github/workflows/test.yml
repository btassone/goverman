name: Test Go Scripts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.name || matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: ubuntu-22.04
          - os: macos-latest
          - os: macos-13
          - os: windows-latest
          - os: ubuntu-latest
            name: alpine-latest
            container: alpine:latest
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Alpine dependencies
      if: matrix.container == 'alpine:latest'
      run: |
        apk add --no-cache bash go git curl wget
        mkdir -p $HOME/go/bin
        echo "export PATH=$HOME/go/bin:$PATH" >> $HOME/.profile
    
    - name: Set up Go
      if: matrix.container != 'alpine:latest'
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Make scripts executable
      run: chmod +x gman test-go-scripts.sh test-path-setup.sh test-list-available.sh
      if: runner.os != 'Windows'
    
    - name: Run PATH setup tests (Unix)
      run: ./test-path-setup.sh
      if: runner.os != 'Windows'
    
    - name: Run installation tests (Unix)
      run: ./test-go-scripts.sh
      if: runner.os != 'Windows'
    
    - name: Run list-available tests (Unix)
      run: ./test-list-available.sh
      if: runner.os != 'Windows'
    
    - name: Run PATH setup tests (Windows)
      run: ./test-path-setup.sh
      shell: bash
      if: runner.os == 'Windows'
    
    - name: Run installation tests (Windows)
      run: ./test-go-scripts.sh
      shell: bash
      if: runner.os == 'Windows'
    
    - name: Run list-available tests (Windows)
      run: ./test-list-available.sh
      shell: bash
      if: runner.os == 'Windows'