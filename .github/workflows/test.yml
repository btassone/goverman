name: Test Go Scripts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.name || matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: ubuntu-22.04
          - os: macos-latest
          - os: macos-13
          - os: windows-latest
          - os: ubuntu-latest
            name: alpine-latest
            container: alpine:latest
          - os: ubuntu-latest
            name: almalinux-9
            container: almalinux:9
          - os: ubuntu-latest
            name: almalinux-8
            container: almalinux:8
          - os: ubuntu-latest
            name: opensuse-leap
            container: opensuse/leap:latest
          - os: ubuntu-latest
            name: opensuse-tumbleweed
            container: opensuse/tumbleweed:latest
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Alpine dependencies
      if: matrix.container == 'alpine:latest'
      run: |
        apk add --no-cache bash go git curl wget
        mkdir -p $HOME/go/bin
        echo "export PATH=$HOME/go/bin:$PATH" >> $HOME/.profile
    
    - name: Install AlmaLinux dependencies
      if: startsWith(matrix.container || '', 'almalinux')
      run: |
        dnf install -y epel-release
        # Use --allowerasing to replace curl-minimal with full curl
        dnf install -y --allowerasing bash git curl wget tar gzip which
        # Install Go from EPEL or download it
        dnf install -y golang || {
          # If Go is not in repos, download and install it
          curl -L https://go.dev/dl/go1.21.13.linux-amd64.tar.gz -o /tmp/go.tar.gz
          tar -C /usr/local -xzf /tmp/go.tar.gz
          echo 'export PATH=/usr/local/go/bin:$PATH' >> /etc/profile
          export PATH=/usr/local/go/bin:$PATH
        }
        mkdir -p $HOME/go/bin
        echo "export PATH=$HOME/go/bin:$PATH" >> $HOME/.bash_profile
    
    - name: Install openSUSE dependencies
      if: startsWith(matrix.container || '', 'opensuse')
      run: |
        # Update package index
        zypper --non-interactive refresh
        # Install required packages
        zypper --non-interactive install bash git curl wget tar gzip which
        # Install Go
        zypper --non-interactive install go || {
          # If Go is not in repos, download and install it
          curl -L https://go.dev/dl/go1.21.13.linux-amd64.tar.gz -o /tmp/go.tar.gz
          tar -C /usr/local -xzf /tmp/go.tar.gz
          echo 'export PATH=/usr/local/go/bin:$PATH' >> /etc/profile
          export PATH=/usr/local/go/bin:$PATH
        }
        mkdir -p $HOME/go/bin
        echo "export PATH=$HOME/go/bin:$PATH" >> $HOME/.bash_profile
    
    - name: Set up Go
      if: matrix.container == null
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Make scripts executable
      run: chmod +x gman test-go-scripts.sh test-path-setup.sh test-list-available.sh
      if: runner.os != 'Windows'
    
    - name: Run PATH setup tests (Unix)
      run: ./test-path-setup.sh
      if: runner.os != 'Windows'
    
    - name: Run installation tests (Unix)
      run: ./test-go-scripts.sh
      if: runner.os != 'Windows'
    
    - name: Run list-available tests (Unix)
      run: ./test-list-available.sh
      if: runner.os != 'Windows'
    
    - name: Run PATH setup tests (Windows)
      run: ./test-path-setup.sh
      shell: bash
      if: runner.os == 'Windows'
    
    - name: Run installation tests (Windows)
      run: ./test-go-scripts.sh
      shell: bash
      if: runner.os == 'Windows'
    
    - name: Run list-available tests (Windows)
      run: ./test-list-available.sh
      shell: bash
      if: runner.os == 'Windows'